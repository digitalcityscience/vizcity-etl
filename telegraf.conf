[agent]
  ## Default data collection interval for all inputs
  interval = "1m"
  ## Log at debug level.
  debug = true
  ## Log only error level messages.
  quiet = false

[[outputs.file]]
  ## Files to write to, "stdout" is a specially handled file.
  files = ["./tmp/metrics.out.json"]
  data_format = "json"

#####[[inputs.http]]
####### E-Autos in Hamburg
###### URL for NYC's Citi Bike station data in JSON format
#####urls = ['https://iot.hamburg.de/v1.0/Things?$filter=Datastreams/properties/serviceName%20eq%20%27HH_STA_E-Ladestationen%27&$count=true&$expand=Locations,Datastreams($expand=Observations($top=1),Sensor,ObservedProperty)']

[[inputs.file]]
  files = ["./inputs/ev-charging-stations.json"]
  name_override = "ev-charging-stations"
  # Exclude url and host items from tags
  tagexclude = ["url", "host"]
  # Data from HTTP in JSON format
  data_format = "json_v2"
  [[inputs.file.json_v2]]
    measurement_name = "ev-charging"
    timestamp_path =  "value.#.Datastreams.0.Observations.0.phenomenonTime"
    timestamp_format = "reference time"
      # Add an object subtable for to parse a JSON object
          [[inputs.file.json_v2.field]]
              path = "value.#.Locations.0.location.geometry.coordinates.0"
              rename = "latitude"
          [[inputs.file.json_v2.field]]
              path = "value.#.Locations.0.location.geometry.coordinates.1"
              rename = "longitude"
          [[inputs.file.json_v2.field]]
              path = "value.#.Locations.0.description"
              rename = "address"
          [[inputs.file.json_v2.field]]
              path = "value.#.Datastreams.0.Observations.0.result"
              rename= "status" 